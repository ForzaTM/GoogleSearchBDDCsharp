// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GoogleAutoTest.Specs.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GoogleSearch")]
    [NUnit.Framework.CategoryAttribute("GoogleSearch")]
    public partial class GoogleSearchFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GoogleSearch.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GoogleSearch", "\tSearch for “automation”.\t", ProgrammingLanguage.CSharp, new string[] {
                        "GoogleSearch"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01 Open Google search and verify that title contains searched word")]
        [NUnit.Framework.CategoryAttribute("nunit")]
        [NUnit.Framework.TestCaseAttribute("1. Search using Chrome driver", "Chrome", "automation", null)]
        [NUnit.Framework.TestCaseAttribute("2. Search using IE drive", "IE", "automation", null)]
        [NUnit.Framework.TestCaseAttribute("3. Search using Firefox drive", "Firefox", "automation", null)]
        public virtual void _01OpenGoogleSearchAndVerifyThatTitleContainsSearchedWord(string scenarioName, string browser, string expectedWord, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "nunit"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01 Open Google search and verify that title contains searched word", null, @__tags);
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "GivenBrowser",
                        "GivenWord"});
            table1.AddRow(new string[] {
                        string.Format("{0}", browser),
                        "automation"});
#line 7
 testRunner.Given("I have entered searched word into the Google search", ((string)(null)), table1, "Given ");
#line 10
 testRunner.When("I press search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Word"});
            table2.AddRow(new string[] {
                        string.Format("{0}", expectedWord)});
#line 11
 testRunner.Then("the title containss expected word", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02 Verify that there is expected domain on search results pages")]
        [NUnit.Framework.TestCaseAttribute("1. Search using Chrome driver", "Chrome", "testautomationday.com", "5", null)]
        [NUnit.Framework.TestCaseAttribute("2. Search using IE drive", "IE", "testautomationday.com", "5", null)]
        [NUnit.Framework.TestCaseAttribute("3. Search using Firefox drive", "Firefox", "testautomationday.com", "5", null)]
        public virtual void _02VerifyThatThereIsExpectedDomainOnSearchResultsPages(string scenarioName, string browser, string expectedDomain, string pagesToCheck, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02 Verify that there is expected domain on search results pages", null, exampleTags);
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "GivenBrowser",
                        "GivenWord"});
            table3.AddRow(new string[] {
                        string.Format("{0}", browser),
                        "automation"});
#line 21
 testRunner.Given("I have entered searched word into the Google search", ((string)(null)), table3, "Given ");
#line 24
 testRunner.When("I press search button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Domain",
                        "Pages"});
            table4.AddRow(new string[] {
                        string.Format("{0}", expectedDomain),
                        string.Format("{0}", pagesToCheck)});
#line 25
 testRunner.Then("results on one of the result pages contain expected domain", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
